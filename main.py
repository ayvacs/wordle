from functools import lru_cache


class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


print(bcolors.FAIL + """
 ‚ñà     ‚ñà‚ñë ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñà‚ñà‚ñì    ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñì‚ñà‚ñë ‚ñà ‚ñë‚ñà‚ñë‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñì‚ñà‚ñà‚ñí    ‚ñì‚ñà   ‚ñÄ 
‚ñí‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñà‚ñà‚ñà   
‚ñë‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñì‚ñà  ‚ñÑ 
‚ñë‚ñë‚ñà‚ñà‚ñí‚ñà‚ñà‚ñì ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí
‚ñë ‚ñì‚ñë‚ñí ‚ñí  ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë ‚ñí‚ñí‚ñì  ‚ñí ‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë
  ‚ñí ‚ñë ‚ñë    ‚ñë ‚ñí ‚ñí‚ñë   ‚ñë‚ñí ‚ñë ‚ñí‚ñë ‚ñë ‚ñí  ‚ñí ‚ñë ‚ñë ‚ñí  ‚ñë ‚ñë ‚ñë  ‚ñë
  ‚ñë   ‚ñë  ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë‚ñë   ‚ñë  ‚ñë ‚ñë  ‚ñë   ‚ñë ‚ñë      ‚ñë   
    ‚ñë        ‚ñë ‚ñë     ‚ñë        ‚ñë        ‚ñë  ‚ñë   ‚ñë  ‚ñë
                            ‚ñë                     
  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñì  ‚ñà‚ñà‚ñí   ‚ñà‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà    
‚ñí‚ñà‚ñà    ‚ñí ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí ‚ñì‚ñà‚ñà‚ñë   ‚ñà‚ñí‚ñì‚ñà   ‚ñÄ ‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí  
‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë  ‚ñì‚ñà‚ñà  ‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà   ‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí  
  ‚ñí   ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñë   ‚ñí‚ñà‚ñà ‚ñà‚ñë‚ñë‚ñí‚ñì‚ñà  ‚ñÑ ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ    
‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÄ‚ñà‚ñë  ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí  
‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë ‚ñê‚ñë  ‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë  
‚ñë ‚ñë‚ñí  ‚ñë ‚ñë  ‚ñë ‚ñí ‚ñí‚ñë ‚ñë ‚ñë ‚ñí  ‚ñë‚ñë ‚ñë‚ñë   ‚ñë ‚ñë  ‚ñë  ‚ñë‚ñí ‚ñë ‚ñí‚ñë  
‚ñë  ‚ñë  ‚ñë  ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë ‚ñë     ‚ñë‚ñë     ‚ñë     ‚ñë‚ñë   ‚ñë   
      ‚ñë      ‚ñë ‚ñë      ‚ñë  ‚ñë   ‚ñë     ‚ñë  ‚ñë   ‚ñë       
                            ‚ñë                     

  Made by """ + bcolors.BOLD + """@ayvacs on GitHub

  Here's how to use the program:""" + bcolors.ENDC + bcolors.FAIL + """
    - Every time it gives you a new word, type
      it into Wordle.
    - After that, type in your result, replacing
      green with `2`, yellow with `1`, and gray
      with `0`.
    - For example, if you got these squares:
        üü©üü®‚¨õÔ∏è‚¨õÔ∏èüü®
      You would type `21001`.
    - It can take a while to process the initial
      guess! Don't give up on me :P
  """ + bcolors.ENDC)


f = open("words.txt", "r")
all_w = open("words.txt", "r")

lines = f.readlines()
all_lines = all_w.readlines()


count = 0


@lru_cache(maxsize=None)
def calc_response_vector(w1, w2):
    tw2 = w2
    msum = [0 for i in range(5)]
    for c_ind in range(5):
        if w1[c_ind] == tw2[c_ind]:
            msum[c_ind] = 2
            tw2 = tw2[:c_ind] + "*" + tw2[c_ind+1:]
    for c_ind in range(5):
        if w1[c_ind] in tw2 and msum[c_ind] == 0:
            msum[c_ind] = 1
            ind_app = tw2.find(w1[c_ind])
            tw2 = tw2[:ind_app] + "*" + tw2[ind_app+1:]
    return msum


for round in range(6):
    min_wc = 100000
    chosen_word = ""
    srmat = {}
    if round != 0:
        all_it = all_lines
        nw = "NEW WORD"
    else:
        all_it = ["aesir"]
        nw = "STARTING WORD"

    for w1 in all_it:
        w1 = w1.strip()
        mat = {}
        rmat = {}
        for w2 in lines:
            w2 = w2.strip()
            msum = calc_response_vector(w1, w2)
            if tuple(msum) not in rmat:
                rmat[tuple(msum)] = [w2]
            else:
                rmat[tuple(msum)].append(w2)
            mat[tuple([w1, w2])] = msum

        M = max([len(val) for val in rmat.values()])
        if M < min_wc:
            min_wc = M
            chosen_word = w1
            srmat = rmat

    print(bcolors.BOLD + "\n" + nw + ":\n" +
          bcolors.ENDC + " >> " + chosen_word)
    inp = input(bcolors.ENDC + " >> ")
    feedback = tuple([int(el) for el in list(inp)])
    lines = srmat[feedback]
    if len(lines) == 1:
        print(bcolors.BOLD + "\nSUCCESS: " +
              bcolors.ENDC + "{}".format(lines[0]))
        print(" ")
        exit(0)

print(bcolors.BOLD + "\nFAIL: " + bcolors.ENDC +
      "I couldn't find the word after 6 attempts.")
